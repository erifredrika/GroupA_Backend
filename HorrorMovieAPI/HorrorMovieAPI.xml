<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HorrorMovieAPI</name>
    </assembly>
    <members>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.GetAllActors(System.Nullable{System.Int32},System.Int32,System.String,System.String[])">
            <summary>
            Get all actors, possible to filter on first name and include movies
            </summary>
            <param name="firstName"></param>
            <param name="including"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.GetActorById(System.Int32,System.Boolean)">
            <summary>
            Get actor by Id, possible to filter on movies
            </summary>
            <param name="id"></param>
            <param name="includeMovies"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.DeleteActorById(System.Int32)">
            <summary>
            Delete actor by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.UpdateActorDetails(System.Int32,HorrorMovieAPI.Dto.ActorForUpdateDTO)">
            <summary>
            Update actor by Id
            </summary>
            <param name="id"></param>
            <param name="actorForUpdateDto"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.CreateActor(HorrorMovieAPI.Models.ActorDTO)">
            <summary>
            Create actor
            </summary>
            <param name="actorDTO"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.GetAll(System.String,System.Boolean)">
            <summary>
            Gets all the directors with possible filtering by birthcountry and include of directed movies
            </summary>
            <param name="birthCountry"></param>
            <param name="includeMovies"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.GetDirectorById(System.Int32,System.Boolean)">
            <summary>
            Get a director by a specific id and possible include of directed movies
            </summary>
            <param name="id"></param>
            <param name="includeMovies"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.DeleteDirectorById(System.Int32)">
            <summary>
            Delete a director by unique id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.UpdateDirectorDetails(System.Int32,HorrorMovieAPI.Dto.DirectorForUpdateDTO)">
            <summary>
            Update directordetails by unique id
            </summary>
            <param name="id"></param>
            <param name="directorForUpdateDto"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.CreateDirector(HorrorMovieAPI.Dto.DirectorForUpdateDTO)">
            <summary>
            Post a new director
            </summary>
            <param name="directorDto"></param>
            <returns></returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.GetAll(System.Nullable{System.Int32},System.Int32,System.String,System.String[])">
            <summary>
            Gets all the genres with possibility to include movies
            </summary>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.GetGenreById(System.Int32,System.Boolean)">
            <summary>
            Gets the genre with a specific ID and possibility to include movies
            </summary>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.DeleteGenreById(System.Int32)">
            <summary>
            Detete the genre with a specific ID 
            </summary>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.UpdateGenreDetails(System.Int32,HorrorMovieAPI.Models.GenreForUpdateDTO)">
            <summary>
            Change the genre with a specific ID 
            </summary>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.CreateGenre(HorrorMovieAPI.Models.GenreDTO)">
            <summary>
            Create a new genre
            </summary>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.GetAll(System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Gets all movies from the database.
            </summary>
            <param name="movieTitle">Filter by Movies by title.</param>
            <param name="exactYear">Filter Movies by exact release year.</param>
            <param name="afterYear">Filter Movies which were created after this year.</param>
            <param name="including">Dynamic inclusions which determine what foreign entities should be included in results.</param>
            <returns>A list of Movies that may or may not have been filtered by the user.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.GetMovieById(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get a movie by its Id.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <param name="includeActors">Include list of Actors in the Movie.</param>
            <param name="includeDirector">Include who directed the Movie.</param>
            <returns>A Movie object which matched given Id.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.DeleteMovieById(System.Int32)">
            <summary>
            Delete a movie by using its Id.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <returns>Returns status code 204 (NoContent) if the Movie was successfully deleted.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.UpdateMovieDetails(System.Int32,HorrorMovieAPI.Dto.MovieForUpdateDTO)">
            <summary>
            Update a movie by using its Id and MovieForUpdateDTO containing its updated data.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <param name="movieDTO">DTO of a Movie object which contains updated data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 204 (NoContent) if the Movie was successfully updated.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.CreateMovie(HorrorMovieAPI.Dto.MovieForUpdateDTO)">
            <summary>
            Create a movie by using its Id and MovieForUpdateDTO containing its data.
            </summary>
            <param name="movieToCreateDTO">DTO of a Movie object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 201 (Created) if the Movie was successfully created.</returns>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.Id">
            <summary>
            Specific Id
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.FirstName">
            <summary>
            Actor Firstname
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.LastName">
            <summary>
            Actor Lastname
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.DOB">
            <summary>
            Actor date of birth
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.BirthTown">
            <summary>
            The town where the actor was born
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.BirthCountry">
            <summary>
            The country where the actor was born
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.Castings">
            <summary>
            Show which movie(s) the actor starrs in
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.Id">
            <summary>
            Specific ID
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.FirstName">
            <summary>
            First name of the Director
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.LastName">
            <summary>
            Last name of the Director
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.DOB">
            <summary>
            Date of birth of the Director
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.BirthTown">
            <summary>
            Hometown of the Director
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.BirthCountry">
            <summary>
            Homecountry of the Director
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.Movies">
            <summary>
            Directed movies
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreDTO.Name">
            <summary>
            Genre name
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreDTO.Movies">
            <summary>
            A list of movies with the specific genre
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.MovieDTO">
            <summary>
            Represents the data transfer object of a Movie which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Id">
            <summary>
            Primary key of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Genre">
            <summary>
            Genre of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Title">
            <summary>
            Title of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Length">
            <summary>
            The length of the movie in minutes.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Year">
            <summary>
            The year which the movie was released.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Director">
            <summary>
            The person who directed this movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Castings">
            <summary>
            The list of people who acted in the movie.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Dto.MovieForUpdateDTO">
            <summary>
            Represents the data transfer object of a Movie which will be used during POST/PUT-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Title">
            <summary>
            Title of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.DirectorID">
            <summary>
            Foreign key of the director which directed this movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.GenreID">
            <summary>
            Foreign key of the genre.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Length">
            <summary>
            The length of the movie in minutes.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Year">
            <summary>
            The year which the movie was released.
            </summary>
        </member>
    </members>
</doc>
